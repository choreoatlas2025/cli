# Contract Discovery Workflow Example
# This workflow discovers contracts from traces (manual trigger only)
# Copy to .github/workflows/discover.yml in your repository

name: Contract Discovery
on:
  workflow_dispatch:
    inputs:
      trace_url:
        description: 'URL to download trace.json'
        required: true
        type: string
      flow_title:
        description: 'Title for discovered flow'
        required: false
        type: string
        default: 'Discovered Flow'
      create_pr:
        description: 'Create pull request with discovered contracts'
        required: false
        type: boolean
        default: true

jobs:
  discover:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download trace
        run: |
          echo "üì• Downloading trace from: ${{ github.event.inputs.trace_url }}"
          curl -L "${{ github.event.inputs.trace_url }}" \
            -o trace-input.json

      - name: Validate trace format
        run: |
          if ! jq -e '.spans' trace-input.json > /dev/null 2>&1; then
            echo "‚ùå Invalid trace format: missing 'spans' field"
            exit 1
          fi
          echo "‚úÖ Trace format validated"

      - name: Run discovery
        run: |
          echo "üîç Discovering contracts from trace"
          docker run --rm -v ${{ github.workspace }}:/workspace \
            choreoatlas/cli:latest discover \
            --trace /workspace/trace-input.json \
            --out /workspace/discovered.flowspec.yaml \
            --out-services /workspace/discovered-services \
            --title "${{ github.event.inputs.flow_title }}"

      - name: Validate discovered contracts
        run: |
          echo "‚úîÔ∏è Validating discovered FlowSpec"
          docker run --rm -v ${{ github.workspace }}:/workspace \
            choreoatlas/cli:latest lint \
            --flow /workspace/discovered.flowspec.yaml

      - name: List discovered files
        run: |
          echo "üìÅ Discovered contracts:"
          echo "FlowSpec:"
          ls -la discovered.flowspec.yaml
          echo ""
          echo "ServiceSpecs:"
          ls -la discovered-services/

      - name: Upload discovered contracts
        uses: actions/upload-artifact@v3
        with:
          name: discovered-contracts-${{ github.run_number }}
          path: |
            discovered.flowspec.yaml
            discovered-services/
          retention-days: 7

      - name: Create Pull Request
        if: github.event.inputs.create_pr == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          branch: discovered-contracts-${{ github.run_number }}
          delete-branch: true
          title: "üîç Discovered contracts from trace"
          body: |
            ## Contract Discovery Results

            **Source**: ${{ github.event.inputs.trace_url }}
            **Title**: ${{ github.event.inputs.flow_title }}
            **Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### Generated Files
            - FlowSpec: `discovered.flowspec.yaml`
            - ServiceSpecs: `discovered-services/`

            ### Next Steps
            1. Review the generated contracts
            2. Adjust variable mappings and references
            3. Add business rules and constraints
            4. Update file locations to match your project structure
            5. Run validation tests

            ### Validation Command
            ```bash
            choreoatlas validate \
              --flow discovered.flowspec.yaml \
              --trace trace-input.json
            ```

            ---
            *Auto-generated by ChoreoAtlas Discovery*
          commit-message: |
            feat: discovered contracts from trace

            Source: ${{ github.event.inputs.trace_url }}
            Generated by workflow run #${{ github.run_number }}
          labels: |
            contracts
            auto-generated
            discovery